{"remainingRequest":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/babel-loader/lib/index.js!/Users/harrybeckwith/Desktop/vue-port-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/harrybeckwith/Desktop/vue-port-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/harrybeckwith/Desktop/vue-port-master/src/views/Computed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/harrybeckwith/Desktop/vue-port-master/src/views/Computed.vue","mtime":1582707422000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDb21wdXRlZCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG9uZTogImRhdGE6IHtcbiAgICBtZXNzYWdlOiAnSGVsbG8nXG4gIH0sXG4gIGNvbXB1dGVkOiB7XG4gICAgcmV2ZXJzZWRNZXNzYWdlOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5tZXNzYWdlLnNwbGl0KCcnKS5yZXZlcnNlKCkuam9pbignJylcbiAgICB9XG4gIH0iLAogICAgICB0d286ICI8ZGl2IGlkPVwiZXhhbXBsZVwiPlxuICA8cD5PcmlnaW5hbCBtZXNzYWdlOiBcInt7IG1lc3NhZ2UgfX1cIjwvcD5cbiAgPHA+Q29tcHV0ZWQgcmV2ZXJzZWQgbWVzc2FnZTogXCJ7eyByZXZlcnNlZE1lc3NhZ2UgfX1cIjwvcD5cbjwvZGl2PiIsCiAgICAgIHRocmVlOiAibWV0aG9kczoge1xuICAgICAgY2FsY1NpemUodmFsKSB7XG4gICAgICAgICAgcmV0dXJuIHZhbCAqIDJcbiAgICAgIH1cbiAgfSIsCiAgICAgIGZvdXI6ICJ7eyBjYWxjU2l6ZSg1KSB9fSIKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["Computed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,GAAA,8JADA;AASA,MAAA,GAAA,6IATA;AAaA,MAAA,KAAA,6EAbA;AAkBA,MAAA,IAAA;AAlBA,KAAA;AAoBA;AAvBA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <h1 class=\"title\">Computed</h1>\r\n    <p>\r\n      Using a computed property can reduce the template size and increase efficiency.\r\n      You can use use a method that performs some logic and returns a value having the\r\n      same outcome as a computed property.\r\n    </p>\r\n    <h3 class=\"italic title title--page\">Why use Computed Properties?</h3>\r\n    <ul class=\"list list--bullet\">\r\n      <li>reduce template size</li>\r\n      <li>increase efficiency</li>\r\n    </ul>\r\n    <h3 class=\"italic title title--pagec\">Lets look at a computed property</h3>\r\n    <prism language=\"javascript\">{{ one }}</prism>\r\n    <p class=\"italic title title--pagec\">Inside template</p>\r\n    <prism language=\"javascript\">{{ two }}</prism>\r\n    <p>We can see how to reference the computed property so that it displays.\r\n        This of course could be achieved with a method. So why use computed?\r\n    </p>\r\n    <p>Using computed we can make sure that unless there is a change in the 'message' data the call to the computed function will not be made.\r\n        Using a method, the call is made each time the page is loaded. As computed using caching it does not need to make the call again. Knowing this\r\n        we can see the performance difference and how computed is more efficient.\r\n    </p>\r\n     <h3 class=\"italic title title--page\">Can you pass an argument to a computed property?</h3>\r\n     <p>You can't pass an argument, which means this is where a method would be needed. For example you can only do the below with a method.</p>\r\n     <p class=\"italic bold\">script</p>\r\n    <prism language=\"javascript\">{{ three }}</prism>\r\n     <p class=\"italic bold\">template</p>\r\n    <prism language=\"javascript\">{{ four }}</prism>\r\n     <h3 class=\"italic title title--page\">Summary</h3>\r\n     <p>Computed properties are a effienct way to reduce template size and load time. They can be used in a number of ways\r\n         methods become into play once an argument is needed.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Computed\",\r\n  data() {\r\n    return {\r\n      one: `data: {\r\n    message: 'Hello'\r\n  },\r\n  computed: {\r\n    reversedMessage: function () {\r\n      return this.message.split('').reverse().join('')\r\n    }\r\n  }`,\r\n  two: `<div id=\"example\">\r\n  <p>Original message: \"{{ message }}\"</p>\r\n  <p>Computed reversed message: \"{{ reversedMessage }}\"</p>\r\n</div>`,\r\nthree: `methods: {\r\n      calcSize(val) {\r\n          return val * 2\r\n      }\r\n  }`,\r\n  four: `{{ calcSize(5) }}`\r\n    };\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":"src/views"}]}