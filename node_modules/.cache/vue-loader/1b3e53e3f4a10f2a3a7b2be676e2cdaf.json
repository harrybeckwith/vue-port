{"remainingRequest":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/harrybeckwith/Desktop/vue-port-master/src/views/Vuex.vue?vue&type=template&id=70fc1e6c&","dependencies":[{"path":"/Users/harrybeckwith/Desktop/vue-port-master/src/views/Vuex.vue","mtime":1582707422000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}