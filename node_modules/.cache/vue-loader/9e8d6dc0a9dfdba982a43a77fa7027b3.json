{"remainingRequest":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/harrybeckwith/Desktop/vue-port-master/src/views/Vfor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/harrybeckwith/Desktop/vue-port-master/src/views/Vfor.vue","mtime":1582707422000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harrybeckwith/Desktop/vue-port-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG1ldGFJbmZvOiB7CiAgICAvLyBDaGlsZHJlbiBjYW4gb3ZlcnJpZGUgdGhlIHRpdGxlLgogICAgdGl0bGU6ICdWdWUganMgdGlwcycsCiAgICAvLyBSZXN1bHQ6IE15IFBhZ2UgVGl0bGUg4oaQIE15IFNpdGUKICAgIC8vIElmIGEgY2hpbGQgY2hhbmdlcyB0aGUgdGl0bGUgdG8gIk15IE90aGVyIFBhZ2UgVGl0bGUiLAogICAgLy8gaXQgd2lsbCBiZWNvbWU6IE15IE90aGVyIFBhZ2UgVGl0bGUg4oaQIE15IFNpdGUKICAgIHRpdGxlVGVtcGxhdGU6ICclcyDihpAgdi1mb3IgYWN0aXZlJywKICAgIC8vIERlZmluZSBtZXRhIHRhZ3MgaGVyZS4KICAgIG1ldGE6IFsKICAgICAge25hbWU6ICdIb3cgdG8gY3JlYXRlIGEgdnVlIGpzIGFjY29yaW9uIGEgc3RlcCBieSBzdGVwIGd1aWRlLicsIGNvbnRlbnQ6ICdVc2luZyB2LWZvciBpbnNpZGUgYSB0ZW1wbGF0ZSBpcyBwcmV0dHkgY29tbW9uIHdpdGhpbiBhIFZ1ZSBhcHAuIEl0IGNhbiBiZWNvbWUgdHJpY2t5IGlmIHlvdSB3YW50ZWQgdG8gdG9nZ2xlIGFuIGFjdGl2ZSBjbGFzcyBvbiB0aGUgc2VsZWN0ZWQgaXRlbSBvbmx5IGFuZCBub3QgZXZlcnkgaXRlbSBpbnNpZGUgdGhlIGxvb3AuIExldHMgc2VlIGhvd+KApid9CiAgICBdCiAgfSwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgb25lOiBgPHRlbXBsYXRlPgogICAgIDxkaXY+CiAgICAgICAgPGRpdiAKICAgICAgICB2LWZvcj0iKGl0ZW0sIGkgKSBpbiBpdGVtcyIgCiAgICAgICAgOmtleT0iaSIKICAgICAgICA6Y2xhc3M9InsgYWN0aXZlOiBpID09PSBhY3RpdmVJdGVtfSIKICAgICAgICA+CiAgICAgICAgIC8vIHNvbWUgbG9vcGVkIGl0ZW1zIGZyb20gZGF0YSBoZXJlCiAgICAgICAgIC8vIGJ1dHRvbiBmb3IgYWN0aXZlIHRvZ2dsZSAKICAgICAgICAgICAgPGJ1dHRvbiBAY2xpY2s9InNlbGVjdEl0ZW0oaSkiPiBtYWtlIGl0ZW0gYWN0aXZlIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvdGVtcGxhdGU+YCwKdHdvOiBgCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWN0aXZlSXRlbTogbnVsbCwKICAgICAgICB9OwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBzZWxlY3RJdGVtKGkpIHsKICAgICAgICAgICAgdGhpcy5hY3RpdmVJdGVtID0gaTsKICAgICAgICB9LAogICAgfSwKfTsKYAogICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["Vfor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Vfor.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <h1 class=\"title italic\">\n            How to toggle active class inside v-for?\n        </h1>\n        <img src=\"../assets/img/blog/v-for/v-for.jpeg\" alt=\"v-for\" class=\"image\">\n        <p>\n            Using v-for inside a template is pretty common within a Vue app. It can become tricky if you wanted to toggle an active class on the selected item only and not every item inside the loop. Let's see how…\n        </p>\n        <h3 class=\"italic title--page\">\n            app.vue\n        </h3>\n        <prism language =\"javascript\">{{one}}</prism>\n        <p>The above, we have a basic app.vue file template. A v-for looping over items with i set for the index. The class is then bound to active, only when the index is equal to the activeItem, will this equal true and produce the active class.</p>\n        <h3 class=\"italic title--page\">\n              Data and methods - app.vue\n        </h3>\n        <prism language =\"javascript\">{{two}}</prism>\n        <p>First, we set the <span class=\"bold\">activeItem data = null</span>.</p>\n        <p>Then we change this data with the selectItem method, which takes the <span class=\"bold\">index</span> as a <span class=\"bold\">parameter</span>  and updates the <span class=\"bold\">activeItem</span>  to match the index of the clicked item. Now when we click on the first item, <span class=\"bold\">activeItem = 0, i = 0</span>, therefor the first item will be given the <span class=\"bold\"> active class</span>, and the other items will not.</p>\n\n        <p>\n            A pretty simple solution but works well, if possible you can change the data being looped over and store a isActive key and value and toggle this way also.\n        </p>\n\n        <p>Thank you ☕️</p>\n    </div>\n</template>\n<script>\nexport default {\n    metaInfo: {\n    // Children can override the title.\n    title: 'Vue js tips',\n    // Result: My Page Title ← My Site\n    // If a child changes the title to \"My Other Page Title\",\n    // it will become: My Other Page Title ← My Site\n    titleTemplate: '%s ← v-for active',\n    // Define meta tags here.\n    meta: [\n      {name: 'How to create a vue js accorion a step by step guide.', content: 'Using v-for inside a template is pretty common within a Vue app. It can become tricky if you wanted to toggle an active class on the selected item only and not every item inside the loop. Lets see how…'}\n    ]\n  },\n    data() {\n      return {\n        one: `<template>\n     <div>\n        <div \n        v-for=\"(item, i ) in items\" \n        :key=\"i\"\n        :class=\"{ active: i === activeItem}\"\n        >\n         // some looped items from data here\n         // button for active toggle \n            <button @click=\"selectItem(i)\"> make item active </button>\n        </div>\n    </div>\n</template>`,\ntwo: `\nexport default {\n    data() {\n        return {\n            activeItem: null,\n        };\n    },\n    methods: {\n        selectItem(i) {\n            this.activeItem = i;\n        },\n    },\n};\n`\n      }\n    }\n};\n</script>"]}]}