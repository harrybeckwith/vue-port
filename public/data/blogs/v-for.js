{
    "title": "How to toggle active class inside v-for?",
    "content": "<img src='/img/blog/v-for/top.jpeg'/><p>Using v-for inside a template is pretty common within a Vue app. It can become tricky if you wanted to toggle an active class on the selected item only and not every item inside the loop. Let's see how…</p><p class='italic-bold title'>Template app.vue</p><a target='_blank' href ='https://gist.github.com/harrybeckwith/c9e7f9ee4fbbe98b275bfc6ea952f18e#file-app-vue'><img src ='/img/blog/v-for/gist-1.png'/></a><p>The above, we have a basic app.vue file template. A v-for looping over items with i set for the index. The class is then bound to active, only when the index is equal to the activeItem, will this equal true and produce the active class.</p><p class='italic-bold title'>Data and methods</p><a target='_blank' href ='https://gist.github.com/harrybeckwith/a9e25ce550d788e2d1774f4973bf047c#file-app-vue'><img src ='/img/blog/v-for/gist-2.png'/></a><span><p>First, we set the <span class='italic-bold'>activeItem data = null</span>.</span> <p>Then we change this data with the <span class='italic-bold'>selectItem</span> method, which takes the  <span class='italic-bold'>index</span> as a  <span class='italic-bold'>parameter</span> and updates the  <span class='italic-bold'>activeItem</span> to match the index of the clicked item. Now when we click on the first item,  <span class='italic-bold'>activeItem = 0, i = 0</span>, therefor the first item will be given the  <span class='italic-bold'>active class</span>, and the other items will not. </p><p>A pretty simple solution but works well, if possible you can change the data being looped over and store a isActive key and value and toggle this way also. <p>Thank you ☕️</p>"
    
}